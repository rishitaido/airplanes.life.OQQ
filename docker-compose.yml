
networks:
  appnet:
    driver: bridge

volumes:
  loki-data:
  promtail-data:

services:
  python-app:
    container_name: python-app
    build:
      context: .
      # you can uncomment this if you want to pass args:
      # args:
      #   - PYTHONUNBUFFERED=1
    init: true
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5000:5000"      # Flask default port
    networks:
      - appnet
    # Ensure app logs to stdout/stderr for Docker logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  prometheus:
    image: prom/prometheus:latest
    platform: linux/amd64
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - appnet

  grafana:
    image: grafana/grafana:latest
    platform: linux/amd64
    container_name: grafana
    restart: unless-stopped
    env_file:
      - .env                    # so you can set GRAFANA_PASSWORD in .env
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    ports:
      - "3000:3000"
    networks:
      - appnet

  loki:
    image: grafana/loki:2.8.2
    platform: linux/amd64
    container_name: loki
    restart: unless-stopped
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-local-config.yaml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    ports:
      - "3100:3100"
    networks:
      - appnet

  promtail:
    image: grafana/promtail:2.8.2
    platform: linux/amd64
    container_name: promtail
    restart: unless-stopped
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./promtail/config.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - promtail-data:/promtail
    depends_on:
      - loki
    networks:
      - appnet